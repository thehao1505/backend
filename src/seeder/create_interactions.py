# 3_create_interactions.py
import random
from config_and_utils import (
    like_post, 
    load_from_json
)

# --- C·∫•u h√¨nh cho file n√†y ---
MAX_LIKES_PER_USER = 15
USERS_FILE = "users.json"
POSTS_FILE = "posts.json"

def main():
    print("\n--- B·∫Øt ƒë·∫ßu t·∫°o l∆∞·ª£t th√≠ch (interactions) ---")

    # 1. T·∫£i d·ªØ li·ªáu users v√† posts
    users = load_from_json(USERS_FILE)
    all_posts = load_from_json(POSTS_FILE)

    if not users or not all_posts:
        print(f"‚ùå Kh√¥ng t√¨m th·∫•y file {USERS_FILE} ho·∫∑c {POSTS_FILE}.")
        print("B·∫°n c·∫ßn ch·∫°y '1_create_users.py' v√† '2_create_posts.py' tr∆∞·ªõc.")
        return

    print(f"   ƒê√£ t·∫£i {len(users)} users v√† {len(all_posts)} posts.")
    
    # 2. M·ªói user ƒëi th√≠ch b√†i ƒëƒÉng c·ªßa ng∆∞·ªùi kh√°c
    for user in users:
        num_likes_to_do = random.randint(0, MAX_LIKES_PER_USER)
        
        # L·ªçc ra c√°c b√†i kh√¥ng ph·∫£i c·ªßa user n√†y
        posts_to_like = [p for p in all_posts if p['author_id'] != user['id']]
        
        if not posts_to_like or num_likes_to_do == 0:
            print(f"   üë§ User {user['username']} kh√¥ng th√≠ch b√†i n√†o.")
            continue

        print(f"   üë§ User {user['username']} s·∫Ω th√≠ch {num_likes_to_do} b√†i ƒëƒÉng:")
        
        # Ch·ªçn ng·∫´u nhi√™n c√°c b√†i ƒë·ªÉ th√≠ch (ƒë·∫£m b·∫£o kh√¥ng l·∫∑p l·∫°i)
        liked_count = 0
        posts_sample = random.sample(posts_to_like, min(num_likes_to_do, len(posts_to_like)))
        
        for post in posts_sample:
            success = like_post(user['token'], post['id'])
            if success:
                liked_count += 1
        
        print(f"      -> ƒê√£ th√≠ch th√†nh c√¥ng {liked_count} b√†i.")

    print("\n--- Ho√†n th√†nh k·ªãch b·∫£n t·∫°o t∆∞∆°ng t√°c ---")

if __name__ == "__main__":
    main()